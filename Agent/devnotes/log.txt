Log

Date: 2025-06-03

Today's session focused on implementing a comprehensive gesture-based control system and improving the overall user experience.

Advances:
1.  **Gesture Lexicon Implementation**: A full set of hand gestures has been integrated to control the main modeling functions. The system now recognizes touches between the thumb and other fingers on both hands.

2.  **Right-Hand Commands**:
    *   **Deformation (Thumb + Index)**: Activates mesh deformation. This is now weighted to only be influenced by the thumb and index fingertips for more precise control.
    *   **Camera Orbit (Thumb + Middle/Ring)**: The camera now orbits around the central mesh on the Z-axis (middle finger) or Y-axis (ring finger), providing a more intuitive inspection experience. This replaces the previous object-centric rotation.
    *   **Cube Creation (Thumb + Pinky)**: Allows the user to dynamically create a cube primitive. The cube is finalized and merged with the main mesh upon gesture release.

3.  **Left-Hand Commands**:
    *   **Camera Reset (Thumb + Index)**: A new "home" button functionality. Holding this gesture for one second resets the camera to its initial position, preventing disorientation.

4.  **User Experience Enhancements**:
    *   **Flicker Correction**: Eliminated the flickering of fingertip markers by moving them to a distant location instead of toggling their visibility.
    *   **Gesture Hold Mechanism**: Implemented a one-second hold requirement for the camera reset gesture to prevent accidental activation.
    *   **Blender UI Panel**: Added a dedicated "CONJURE" panel in the Blender UI to cleanly initiate and finalize the script, removing the need to manually stop it.
    *   **Coordinate Mapping Scale**: Introduced configurable scaling factors (X, Y, Z) for hand mapping, allowing for fine-tuning of gesture sensitivity.

5.  **Code & Stability**:
    *   Refactored the main Blender script to correctly register and handle custom properties, resolving `AttributeError` tracebacks.
    *   Resolved `ModuleNotFoundError` for the `mediapipe` library by adjusting import statements for better environment compatibility. 

---
Date: 2025-06-04 (Afternoon Session)

Focus shifted to refining the sculpting experience, adding more advanced and intuitive user controls.

Advances:
1.  **Physics-Based Deformation**:
    *   **Volume Preservation**: Implemented a system to maintain the mesh's volume during deformation, preventing the "deflated balloon" effect and making the object feel solid.
    *   **Viscosity & Damping**: Added a velocity-based physics model. The mesh now has a sense of momentum and viscosity, making the sculpting feel more natural and less like manipulating a static set of points.
    *   **Parameter Tuning**: Refined force and damping parameters to prevent simulation explosion and provide a stable, controllable sculpting feel.

2.  **Rewind Functionality**:
    *   Replaced the "Create Cube" gesture (Right Thumb + Pinky) with a much more useful **"Rewind"** feature.
    *   The system now keeps a history of mesh states, allowing the user to step back through their modifications instantly.

3.  **Sculpting Brush System**:
    *   Introduced a multi-brush system to move beyond simple pinching.
    *   **New Gesture**: The Left Thumb + Middle Finger gesture now cycles through the available brushes.
    *   **Brush Types**: Implemented three distinct brushes:
        *   `PINCH`: The original behavior, pulls vertices towards the fingers.
        *   `GRAB`: Moves the affected vertices along with the hand's movement.
        *   `SMOOTH`: Averages vertices to soften and blend the mesh.
    *   **UI Feedback**: Added an on-screen text display in the Blender viewport to show the currently active brush.

4.  **Advanced Brush Controls**:
    *   **Radius Cycling**: Implemented a brush radius system with `SMALL`, `MEDIUM`, and `LARGE` settings.
    *   **Smooth Falloff**: Applied a smooth, distance-based falloff to all brushes, eliminating harsh edges and creating a natural, clay-like sculpting feel.

5.  **Bug Fixes & Stability**:
    *   Corrected a critical `IndexError` in the hand tracker related to single-hand detection.
    *   Fixed a `NameError` in the CONJURE addon's deformation function.

---
Date: 2025-06-05

This session focused on a complete overhaul of the user experience and control scheme based on hands-on feedback, transforming the tool's feel and usability.

Advances:
1.  **Intuitive Orbit System**:
    *   Replaced the separate X/Y axis rotation gestures with a single, unified "Orbit" mode.
    *   The new system directly maps hand movement to camera rotation, mimicking conventional 3D software for a much more intuitive feel.
    *   Implemented smoothing and locked the camera's focus to the world origin to prevent disorientation and drift.

2.  **Expanded Sculpting Palette**:
    *   Added two new, powerful brushes: `INFLATE` (to add/remove volume) and `FLATTEN` (to create hard surfaces).
    *   The total brush count is now five: `PINCH`, `GRAB`, `SMOOTH`, `INFLATE`, `FLATTEN`.

3.  **Advanced Brush Controls**:
    *   **Radius Cycling**: Implemented a brush radius system with `SMALL`, `MEDIUM`, and `LARGE` settings.
    *   **Smooth Falloff**: Applied a smooth, distance-based falloff to all brushes, eliminating harsh edges and creating a natural, clay-like sculpting feel.

4.  **Ergonomic & Control Refinements**:
    *   **Gesture Re-mapping**: Moved "Cycle Brush" to the right hand and "Cycle Radius" to the left hand for a more logical separation of concerns.
    *   **Continuous Rewind**: Changed the rewind function from a single-shot to a continuous action, allowing for rapid, press-and-hold undoing.
    *   **Comprehensive Calibration**: Performed multiple iterative tuning passes on brush strengths, radii, and orbit sensitivity to perfect the tool's feel.

5.  **Bug Fixes & Stability**:
    *   Corrected a critical `IndexError` in the hand tracker related to single-hand detection.
    *   Fixed a `NameError` in the CONJURE addon's deformation function.

---
Date: 2025-06-06 (Afternoon Session)

Focus on improving the core sculpting interaction to be more intuitive and tactile.

Advances:
1.  **Surface-Constrained Cursor Projection (Surface Snapping)**:
    *   Implemented a new system that projects the fingertip cursor onto the visible surface of the mesh.
    *   This is achieved by raycasting from the user's point of view through the fingertip's 2D screen position.
    *   The cursor now intelligently "snaps" to the mesh surface when the user's hand is behind or inside it, preventing the markers from getting lost and providing a much more intuitive, tactile sculpting feel.

2.  **Bug Fixes & Stability**:
    *   Pinpointed and fixed a visual bug causing the fingertip markers to flicker. The issue was a redundant `hide_viewport` call; the system now relies exclusively on moving markers to a distant location to control visibility, which is more stable. 

---
Date: 2025-06-07

Finalized the core sculpting and modeling experience with a series of stability fixes and parameter tuning.

Advances:
1.  **Visual Stability (Z-Fighting Fix)**:
    *   Eliminated the visual flickering/bouncing of fingertip markers when snapped to the mesh surface.
    *   The definitive solution offsets the visual marker from the point of contact directly back towards the camera, providing a rock-solid and visually stable cursor that glides smoothly over the surface.

2.  **Interaction Stability (Flicker Fix)**:
    *   Resolved an `AttributeError` that caused the operator to crash when the mouse left the 3D viewport.
    *   Implemented a "grace period" for marker visibility to handle micro-dropouts in hand tracking data, preventing markers from flickering in and out of existence.

3.  **Brush Calibration Pass**:
    *   Increased the force of the `PINCH`, `GRAB`, `SMOOTH`, and `FLATTEN` brushes by 50% for more impactful sculpting.
    *   Gave the `INFLATE` brush its own dedicated radius, making it twice as large as other brushes to allow for broader volume adjustments. 

---
Date: 2025-06-08

This session focused on a major architectural refactor to transition the Blender integration from a single script into a standard, multi-file addon. This improves stability and maintainability for future development.

Advances:
1.  **Addon Structure Implementation**:
    *   The entire Blender Python integration was moved from a single file into a dedicated addon located at `scripts/addons/conjure/`.
    *   The code was modularized into separate files for the main operator (`operator_main.py`), UI panel (`panel_ui.py`), I/O operators (`ops_io.py`), and configuration (`config.py`).
    *   Updated the `launcher` to correctly enable the addon at startup instead of running a single script.

2.  **Centralized Configuration**:
    *   All hardcoded constants and file paths were moved from `operator_main.py` into the new `scripts/addons/conjure/config.py`, fixing critical file path issues that were preventing hand tracking data from being read.

3.  **Generative Pipeline UI**:
    *   The CONJURE UI panel in Blender was updated to serve as a primary control and debug interface.
    *   Added a "Generative Pipeline" section with placeholder buttons for each stage of the ComfyUI workflow: `Generate Concepts`, `Select Option [1-3]`, and `Import Model`.

4.  **Bug Fixes & Stability**:
    *   Resolved an issue where UI buttons were not appearing due to an invalid icon name in the panel code.
    *   Added robust logging to the addon's `__init__.py` to make future registration errors easier to debug.
    *   Modified the launcher to auto-start the CONJURE operator, removing the need for an extra click on initialization. 

---
Date: 2025-06-09

Focus on implementing the final 2D-to-3D generation pipeline and a mesh history system.

Advances:
1.  **Pipeline Bug Fix**:
    *   Corrected a bug where multi-view images for the 3D generation step were accumulating in the `data/generated_images/mvResults` directory instead of being overwritten. The launcher now cleans this directory before each run.
    *   Fixed a case-sensitivity bug where the `MVCamera` was not being found by correcting the name to `mvCamera` in the addon's configuration.

2.  **3D Generation & Import Pipeline (In Progress)**:
    *   Laid out the full implementation plan for the `mv23D` workflow.
    *   The launcher will be updated to automatically trigger the `mv23D.json` workflow.
    *   A state-based signaling system (`import_request`) will be added to notify Blender when a new model is ready.
    *   A comprehensive mesh history system will be built in Blender to archive previous meshes and make the newly generated model the active sculpting target. 